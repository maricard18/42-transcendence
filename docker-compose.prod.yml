version: '3.8'
services:
  auth_service-postgres:
    container_name: auth_service-postgres
    image: postgres:13-alpine3.18
    user: postgres
    environment:
      POSTGRES_HOST_FILE: /run/secrets/auth_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/auth_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/auth_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/auth_service-postgres_password
    secrets:
      - auth_service-postgres_host
      - auth_service-postgres_db
      - auth_service-postgres_user
      - auth_service-postgres_password
    expose:
      - "5432"
    networks:
      - transcendence
    volumes:
      - auth_service-postgres_data:/var/lib/postgresql/data/:rw
    healthcheck:
      test: [ "CMD-SHELL", 'pg_isready -h "$(cat $POSTGRES_HOST_FILE)" -U "$(cat $POSTGRES_USER_FILE)" -d "$(cat $POSTGRES_DB_FILE)"' ]
      interval: 5s
      start_period: 5s
      retries: 5
    profiles: [ "", "auth_service" ]
    restart: always

  auth_service:
    container_name: auth_service
    build:
      context: auth_service/
      target: prod
    environment:
      POSTGRES_HOST_FILE: /run/secrets/auth_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/auth_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/auth_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/auth_service-postgres_password
      SSO_42_CLIENT_SECRET_FILE: /run/secrets/sso_42_client_secret
      SSO_42_REDIRECT_URI: ${SSO_42_REDIRECT_URI}
      SSO_42_CLIENT_ID: ${SSO_42_CLIENT_ID}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      VAULT_ADDR: http://vault_service:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
    secrets:
      - auth_service-postgres_host
      - auth_service-postgres_db
      - auth_service-postgres_user
      - auth_service-postgres_password
      - sso_42_client_secret
    expose:
      - "8000"
    networks:
      - transcendence
    volumes:
      - auth_service-daphne_sock:/tmp/daphne/:rw
      - media_data:/app/media/:rw
      - vault_services_data:/vault/transcendence/:ro
    depends_on:
      auth_service-postgres:
        condition: service_healthy
      auth_service-db_migrations:
        condition: service_completed_successfully
      modsecurity:
        condition: service_started
      vault_service-init:
        condition: service_completed_successfully
    profiles: [ "", "auth_service" ]
    restart: on-failure

  game_service:
    container_name: game_service
    build:
      context: game_service/
      target: prod
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      VAULT_ADDR: http://vault_service:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
    expose:
      - "8000"
    networks:
      - transcendence
    volumes:
      - game_service-daphne_sock:/tmp/daphne/:rw
      - media_data:/app/media/:rw
      - vault_services_data:/vault/transcendence/:ro
    depends_on:
      redis:
        condition: service_started
      modsecurity:
        condition: service_started
      vault_service-init:
        condition: service_completed_successfully
    profiles: [ "", "game_service" ]
    restart: on-failure

  modsecurity:
    container_name: modsecurity
    build:
      context: .
      dockerfile: modsecurity-nginx/Dockerfile
      args:
        - SSL_CERT
        - SSL_CERT_KEY
    environment:
      # NGINX
      AUTH_SERVICE_BACKEND: http://unix:/tmp/daphne/auth_service/daphne.sock
      GAME_SERVICE_BACKEND: http://unix:/tmp/daphne/game_service/daphne.sock
      NGINX_ALWAYS_TLS_REDIRECT: on
      SSL_CERT: ${SSL_CERT}
      SSL_CERT_KEY: ${SSL_CERT_KEY}
      SSL_PORT: 8443
      VAULT_PORT: 8200
      PORT: 8080
      # ModSecurity
      MODSEC_RULE_ENGINE: On
      ANOMALY_INBOUND: 5
      ANOMALY_OUTBOUND: 4
      BLOCKING_PARANOIA: 2
      ALLOWED_METHODS: GET HEAD POST PUT DELETE OPTIONS
    ports:
      - "8080:8080"
      - "8443:8443"
    networks:
      - transcendence
    volumes:
      - auth_service-daphne_sock:/tmp/daphne/auth_service/:rw
      - game_service-daphne_sock:/tmp/daphne/game_service/:rw
      - web_service-data:/usr/share/nginx/html/:ro
      - static_data:/app/static/:ro
      - media_data:/app/media/:ro
    profiles: [ "", "auth_service", "game_service", "web_service" ]
    restart: on-failure

  redis:
    container_name: redis
    image: redis:7.2-alpine3.18
    expose:
      - "6379"
    networks:
      - transcendence
    profiles: [ "", "game_service" ]
    restart: on-failure

  vault_service:
    container_name: vault_service
    build:
      context: vault/
      target: service
    ports:
      - "8200:8200"
    networks:
      - transcendence
    cap_add:
      - IPC_LOCK
    profiles: [ "", "auth_service", "web_service" ]

  vault_service-init:
    container_name: vault_service-init
    build:
      context: vault/
      target: init
    environment:
      VAULT_ADDR: http://vault_service:8200
    networks:
      - transcendence
    volumes:
      - vault_keys_data:/vault/keys/:rw
      - vault_root_data:/vault/root/:rw
      - vault_services_data:/vault/transcendence/:rw
    depends_on:
      vault_service:
        condition: service_started

  ############# TOOLS #############
  auth_service-db_migrations:
    container_name: auth_service-db_migrations
    build:
      context: auth_service/
      target: tools
    environment:
      POSTGRES_HOST_FILE: /run/secrets/auth_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/auth_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/auth_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/auth_service-postgres_password
      VAULT_ADDR: http://vault_service:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
    secrets:
      - auth_service-postgres_host
      - auth_service-postgres_db
      - auth_service-postgres_user
      - auth_service-postgres_password
    entrypoint: [ "/bin/sh", "/app/tools/db-migrations.sh" ]
    networks:
      - transcendence
    volumes:
      - vault_services_data:/vault/transcendence/:ro
    depends_on:
      auth_service-postgres:
        condition: service_healthy
      vault_service-init:
        condition: service_completed_successfully
    profiles: [ "", "auth_service", "tools" ]
    restart: on-failure

  auth_service-collectstatic:
    container_name: auth_service-collectstatic
    build:
      context: auth_service/
      target: tools
    environment:
      VAULT_ADDR: http://vault_service:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
    entrypoint: [ "python3", "/app/manage.py", "collectstatic", "--noinput" ]
    networks:
      - transcendence
    volumes:
      - ./auth_service/:/app/:ro
      - static_data:/app/static/:rw
      - vault_services_data:/vault/transcendence/:ro
    depends_on:
      vault_service-init:
        condition: service_completed_successfully
    profiles: [ "", "auth_service", "tools" ]
    restart: on-failure

  game_service-collectstatic:
    container_name: game_service-collectstatic
    build:
      context: auth_service/
      target: tools
    environment:
      VAULT_ADDR: http://vault_service:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
    entrypoint: [ "python3", "/app/manage.py", "collectstatic", "--noinput" ]
    networks:
      - transcendence
    volumes:
      - ./game_service/:/app/:ro
      - static_data:/app/static/:rw
      - vault_services_data:/vault/transcendence/:ro
    depends_on:
      vault_service-init:
        condition: service_completed_successfully
    profiles: [ "", "game_service", "tools" ]
    restart: on-failure

  web_service:
    container_name: web_service
    build:
      context: web_service/
      target: prod
    environment:
      SSO_42_CLIENT_ID: ${SSO_42_CLIENT_ID}
      SSO_42_REDIRECT_URI: ${SSO_42_REDIRECT_URI}
    volumes:
      - web_service-data:/app/:rw
      - vault_services_data:/vault/transcendence/:ro
    depends_on:
      vault_service-init:
        condition: service_completed_successfully
    profiles: [ "", "web_service", "tools" ]
    restart: on-failure

networks:
  transcendence:
    driver: bridge

volumes:
  auth_service-postgres_data:
  auth_service-daphne_sock:
  game_service-daphne_sock:
  web_service-data:
  vault_root_data:
  vault_keys_data:
  vault_services_data:
  static_data:
  media_data:

secrets:
  auth_service-postgres_host:
    file: ./secrets/auth_service/postgres-host
  auth_service-postgres_db:
    file: ./secrets/auth_service/postgres-db
  auth_service-postgres_user:
    file: ./secrets/auth_service/postgres-user
  auth_service-postgres_password:
    file: ./secrets/auth_service/postgres-password
  sso_42_client_secret:
    file: ./secrets/42-client-secret