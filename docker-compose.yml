version: '3.8'
services:
  auth_service-postgres-dev:
    image: postgres:13-alpine3.18
    user: postgres
    environment:
      POSTGRES_HOST_FILE: /run/secrets/auth_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/auth_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/auth_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/auth_service-postgres_password
    secrets:
      - auth_service-postgres_host
      - auth_service-postgres_db
      - auth_service-postgres_user
      - auth_service-postgres_password
    expose:
      - "5432"
    networks:
      - transcendence-dev
    volumes:
      - auth_service-postgres_data-dev:/var/lib/postgresql/data/:rw
    healthcheck:
      test: [ "CMD-SHELL", 'pg_isready -h "$(cat $POSTGRES_HOST_FILE)" -U "$(cat $POSTGRES_USER_FILE)" -d "$(cat $POSTGRES_DB_FILE)"' ]
      interval: 5s
      start_period: 5s
      retries: 5
    profiles: [ "", "auth_service" ]
    restart: always

  auth_service-dev:
    build:
      context: auth_service/
      target: dev
    environment:
      POSTGRES_HOST_FILE: /run/secrets/auth_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/auth_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/auth_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/auth_service-postgres_password
      SSO_42_CLIENT_SECRET_FILE: /run/secrets/sso_42_client_secret
      SSO_42_CLIENT_ID: ${SSO_42_CLIENT_ID}
      SSO_42_REDIRECT_URI: ${SSO_42_REDIRECT_URI}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      VAULT_ADDR: https://modsecurity-dev:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
    secrets:
      - auth_service-postgres_host
      - auth_service-postgres_db
      - auth_service-postgres_user
      - auth_service-postgres_password
      - sso_42_client_secret
    expose:
      - "8000"
    networks:
      - transcendence-dev
    volumes:
      - ./auth_service/:/app/:ro
      - media_data-dev:/app/media/:rw
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      auth_service-postgres-dev:
        condition: service_healthy
      auth_service-db_migrations-dev:
        condition: service_completed_successfully
      modsecurity-dev:
        condition: service_started
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "auth_service" ]
    restart: on-failure

  game_service-postgres-dev:
    image: postgres:13-alpine3.18
    user: postgres
    environment:
      POSTGRES_HOST_FILE: /run/secrets/game_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/game_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/game_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/game_service-postgres_password
    secrets:
      - game_service-postgres_host
      - game_service-postgres_db
      - game_service-postgres_user
      - game_service-postgres_password
    expose:
      - "5432"
    networks:
      - transcendence-dev
    volumes:
      - game_service-postgres_data-dev:/var/lib/postgresql/data/:rw
    healthcheck:
      test: [ "CMD-SHELL", 'pg_isready -h "$(cat $POSTGRES_HOST_FILE)" -U "$(cat $POSTGRES_USER_FILE)" -d "$(cat $POSTGRES_DB_FILE)"' ]
      interval: 5s
      start_period: 5s
      retries: 5
    profiles: [ "", "game_service" ]
    restart: always

  game_service-dev:
    build:
      context: game_service/
      target: dev
    environment:
      REDIS_HOST: game_service-redis_service-dev
      REDIS_PORT: 6379
      POSTGRES_HOST_FILE: /run/secrets/game_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/game_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/game_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/game_service-postgres_password
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      VAULT_ADDR: https://modsecurity-dev:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
    secrets:
      - game_service-postgres_host
      - game_service-postgres_db
      - game_service-postgres_user
      - game_service-postgres_password
    expose:
      - "8000"
    networks:
      - transcendence-dev
    volumes:
      - ./game_service/:/app/:ro
      - media_data-dev:/app/media/:rw
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      game_service-postgres-dev:
        condition: service_healthy
      game_service-db_migrations-dev:
        condition: service_completed_successfully
      game_service-redis_service-dev:
        condition: service_healthy
      modsecurity-dev:
        condition: service_started
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "game_service" ]
    restart: on-failure

  friendship_service-postgres-dev:
    image: postgres:13-alpine3.18
    user: postgres
    environment:
      POSTGRES_HOST_FILE: /run/secrets/friendship_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/friendship_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/friendship_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/friendship_service-postgres_password
    secrets:
      - friendship_service-postgres_host
      - friendship_service-postgres_db
      - friendship_service-postgres_user
      - friendship_service-postgres_password
    expose:
      - "5432"
    networks:
      - transcendence-dev
    volumes:
      - friendship_service-postgres_data-dev:/var/lib/postgresql/data/:rw
    healthcheck:
      test: [ "CMD-SHELL", 'pg_isready -h "$(cat $POSTGRES_HOST_FILE)" -U "$(cat $POSTGRES_USER_FILE)" -d "$(cat $POSTGRES_DB_FILE)"' ]
      interval: 5s
      start_period: 5s
      retries: 5
    profiles: [ "", "friendship_service" ]
    restart: always

  friendship_service-dev:
    build:
      context: friendship_service/
      target: dev
    environment:
      REDIS_HOST: friendship_service-redis_service-dev
      REDIS_PORT: 6379
      POSTGRES_HOST_FILE: /run/secrets/friendship_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/friendship_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/friendship_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/friendship_service-postgres_password
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      VAULT_ADDR: https://modsecurity-dev:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
    secrets:
      - friendship_service-postgres_host
      - friendship_service-postgres_db
      - friendship_service-postgres_user
      - friendship_service-postgres_password
    expose:
      - "8000"
    networks:
      - transcendence-dev
    volumes:
      - ./friendship_service/:/app/:ro
      - media_data-dev:/app/media/:rw
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      friendship_service-postgres-dev:
        condition: service_healthy
      friendship_service-db_migrations-dev:
        condition: service_completed_successfully
      friendship_service-redis_service-dev:
        condition: service_healthy
      modsecurity-dev:
        condition: service_started
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "friendship_service" ]
    restart: on-failure

  modsecurity-dev:
    build:
      context: .
      dockerfile: modsecurity-nginx/Dockerfile
      target: dev
      args:
        - SSL_CERT_PATH
        - SSL_CERT_FILE
        - SSL_CERT_KEY_PATH
        - SSL_CERT_KEY_FILE
    environment:
      # NGINX
      AUTH_SERVICE_ADDR: http://auth_service-dev:8000
      GAME_SERVICE_ADDR: http://game_service-dev:8000
      FRIENDSHIP_SERVICE_ADDR: http://friendship_service-dev:8000
      VAULT_SERVICE_ADDR: https://vault_service-dev:8200
      NGINX_ALWAYS_SSL_REDIRECT: on
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
      SSL_CERT_KEY_PATH: ${SSL_CERT_KEY_PATH}
      SSL_CERT_KEY_FILE: ${SSL_CERT_KEY_FILE}
      VAULT_PORT: 8200
      SSL_PORT: 8443
      PORT: 8080
      # ModSecurity
      MODSEC_RULE_ENGINE: On
      ANOMALY_INBOUND: 5
      ANOMALY_OUTBOUND: 4
      BLOCKING_PARANOIA: 2
      ALLOWED_METHODS: GET HEAD POST PUT DELETE OPTIONS
    ports:
      - "8080:8080"
      - "8200:8200"
      - "8443:8443"
    networks:
      - transcendence-dev
    volumes:
      - ./web_service/:/usr/share/nginx/html/:ro
      - web_service-static_data-dev:/usr/share/nginx/html/static/:ro
      - static_data-dev:/app/static/:ro
      - media_data-dev:/app/media/:ro
      - ssl_cert_data-dev:${SSL_CERT_PATH}:rw
      - ssl_cert_key_data-dev:${SSL_CERT_KEY_PATH}:rw
      - telegraf_data-dev:/var/log/telegraf/:rw
    profiles: [ "", "auth_service", "game_service", "friendship_service", "web_service", "monitoring_service" ]
    restart: on-failure

  game_service-redis_service-dev:
    image: redis:7.2-alpine3.18
    expose:
      - "6379"
    networks:
      - transcendence-dev
    healthcheck:
      test: [ "CMD-SHELL", 'redis-cli ping || exit 1' ]
      interval: 5s
      start_period: 5s
      retries: 5
    profiles: [ "", "game_service" ]
    restart: on-failure

  friendship_service-redis_service-dev:
    image: redis:7.2-alpine3.18
    expose:
      - "6379"
    networks:
      - transcendence-dev
    healthcheck:
      test: [ "CMD-SHELL", 'redis-cli ping || exit 1' ]
      interval: 5s
      start_period: 5s
      retries: 5
    profiles: [ "", "friendship_service" ]
    restart: on-failure

  vault_service-dev:
    build:
      context: vault/
      target: service
      args:
        - SSL_CERT_PATH
        - SSL_CERT_FILE
        - SSL_CERT_KEY_PATH
        - SSL_CERT_KEY_FILE
    environment:
      VAULT_SKIP_VERIFY: true
    expose:
      - "8200"
    networks:
      - transcendence-dev
    volumes:
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - ssl_cert_key_data-dev:${SSL_CERT_KEY_PATH}:ro
    healthcheck:
      test: [ "CMD-SHELL", 'vault status' ]
      interval: 5s
      start_period: 5s
      retries: 5
    depends_on:
      modsecurity-dev:
        condition: service_started
    cap_add:
      - IPC_LOCK
    profiles: [ "", "auth_service", "web_service" ]
    restart: on-failure

  telegraf-dev:
    build:
      context: monitoring/telegraf/
      args:
        - NGINX_METRICS_URL=https://modsecurity-dev:8081/nginx_status
    networks:
      - transcendence-dev
    volumes:
      - telegraf_data-dev:/var/log/telegraf/:ro
    depends_on:
      modsecurity-dev:
        condition: service_started
    profiles: [ "", "monitoring_service" ]
    restart: on-failure

  alertmanager-dev:
    build:
      context: monitoring/alertmanager/
      args:
        SLACK_ALERTMANAGER_WEBHOOK: ${SLACK_ALERTMANAGER_WEBHOOK}
        SLACK_ALERTMANAGER_CHANNEL: ${SLACK_ALERTMANAGER_CHANNEL}
    command: [ '--config.file=/etc/alertmanager/alert.yml' ]
    networks:
      - transcendence-dev
    profiles: [ "", "monitoring_service" ]
    restart: on-failure

  prometheus-dev:
    build:
      context: monitoring/prometheus/
      args:
        PROMETHEUS_ADDR: prometheus-dev:9090
        TELEGRAF_ADDR: telegraf-dev:9125
        ALERTMANAGER_ADDR: alertmanager-dev:9093
    command: [ "--config.file=/etc/prometheus/prometheus.yml" ]
    user: root
    privileged: true
    ports:
      - "9090:9090"
    networks:
      - transcendence-dev
    volumes:
      - prometheus_data-dev:/prometheus
    profiles: [ "", "monitoring_service" ]
    restart: on-failure

  grafana-dev:
    build:
      context: monitoring/grafana/
      args:
        PROMETHEUS_URL: http://prometheus-dev:9090
    environment:
      GF_SECURITY_ADMIN_USER__FILE: /run/secrets/grafana_username
      GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/grafana_password
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /etc/grafana/dashboards/Home.json
    secrets:
      - grafana_username
      - grafana_password
    ports:
      - "3000:3000"
    networks:
      - transcendence-dev
    volumes:
      - grafana_data-dev:/var/lib/grafana
    profiles: [ "", "monitoring_service" ]
    restart: on-failure

  ############# TOOLS #############
  vault_service-init-dev:
    image: hashicorp/vault:1.13.3
    entrypoint: [ "/bin/sh", "/vault/scripts/init.sh"]
    environment:
      VAULT_ADDR: https://vault_service-dev:8200
      VAULT_SKIP_VERIFY: true
      VAULT_CACERT: ${SSL_CERT_PATH}${SSL_CERT_FILE}
    networks:
      - transcendence-dev
    volumes:
      - ./vault/policies:/vault/policies/:ro
      - ./vault/scripts:/vault/scripts/:ro
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_keys_data-dev:/vault/keys/:rw
      - vault_root_data-dev:/vault/root/:rw
      - vault_services_data-dev:/vault/transcendence/:rw
    depends_on:
      vault_service-dev:
        condition: service_started

  auth_service-db_migrations-dev:
    build:
      context: auth_service/
      target: tools
    environment:
      POSTGRES_HOST_FILE: /run/secrets/auth_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/auth_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/auth_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/auth_service-postgres_password
      VAULT_ADDR: https://modsecurity-dev:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
    secrets:
      - auth_service-postgres_host
      - auth_service-postgres_db
      - auth_service-postgres_user
      - auth_service-postgres_password
    entrypoint: [ "/bin/sh", "/app/tools/db-migrations.sh" ]
    networks:
      - transcendence-dev
    volumes:
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      auth_service-postgres-dev:
        condition: service_healthy
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "auth_service", "tools" ]

  auth_service-collectstatic-dev:
    build:
      context: auth_service/
      target: tools
    environment:
      VAULT_ADDR: https://modsecurity-dev:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
    entrypoint: [ "python3", "/app/manage.py", "collectstatic", "--noinput" ]
    networks:
      - transcendence-dev
    volumes:
      - ./auth_service/:/app/:ro
      - static_data-dev:/app/static/:rw
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "auth_service", "tools" ]

  game_service-db_migrations-dev:
    build:
      context: game_service/
      target: tools
    environment:
      POSTGRES_HOST_FILE: /run/secrets/game_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/game_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/game_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/game_service-postgres_password
      VAULT_ADDR: https://modsecurity-dev:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
    secrets:
      - game_service-postgres_host
      - game_service-postgres_db
      - game_service-postgres_user
      - game_service-postgres_password
    entrypoint: [ "/bin/sh", "/app/tools/db-migrations.sh" ]
    networks:
      - transcendence-dev
    volumes:
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      game_service-postgres-dev:
        condition: service_healthy
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "game_service", "tools" ]

  game_service-collectstatic-dev:
    build:
      context: game_service/
      target: tools
    environment:
      VAULT_ADDR: https://modsecurity-dev:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
    entrypoint: [ "python3", "/app/manage.py", "collectstatic", "--noinput" ]
    networks:
      - transcendence-dev
    volumes:
      - ./game_service/:/app/:ro
      - static_data-dev:/app/static/:rw
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "game_service", "tools" ]

  friendship_service-db_migrations-dev:
    build:
      context: friendship_service/
      target: tools
    environment:
      POSTGRES_HOST_FILE: /run/secrets/friendship_service-postgres_host
      POSTGRES_DB_FILE: /run/secrets/friendship_service-postgres_db
      POSTGRES_USER_FILE: /run/secrets/friendship_service-postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/friendship_service-postgres_password
      VAULT_ADDR: https://modsecurity-dev:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
    secrets:
      - friendship_service-postgres_host
      - friendship_service-postgres_db
      - friendship_service-postgres_user
      - friendship_service-postgres_password
    entrypoint: [ "/bin/sh", "/app/tools/db-migrations.sh" ]
    networks:
      - transcendence-dev
    volumes:
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      friendship_service-postgres-dev:
        condition: service_healthy
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "friendship_service", "tools" ]

  friendship_service-collectstatic-dev:
    build:
      context: friendship_service/
      target: tools
    environment:
      VAULT_ADDR: https://modsecurity-dev:8200
      VAULT_ROLE_ID_FILE: /vault/transcendence/transcendence-role-id
      VAULT_SECRET_ID_FILE: /vault/transcendence/transcendence-secret-id
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_CERT_FILE: ${SSL_CERT_FILE}
    entrypoint: [ "python3", "/app/manage.py", "collectstatic", "--noinput" ]
    networks:
      - transcendence-dev
    volumes:
      - ./friendship_service/:/app/:ro
      - static_data-dev:/app/static/:rw
      - ssl_cert_data-dev:${SSL_CERT_PATH}:ro
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "friendship_service", "tools" ]

  web_service-dev:
    build:
      context: web_service/
      target: dev
    environment:
      SSO_42_CLIENT_ID: ${SSO_42_CLIENT_ID}
      SSO_42_REDIRECT_URI: ${SSO_42_REDIRECT_URI}
    volumes:
      - ./web_service/:/app/:ro
      - web_service-static_data-dev:/app/static/:rw
      - vault_services_data-dev:/vault/transcendence/:ro
    depends_on:
      vault_service-init-dev:
        condition: service_started
      vault_service-dev:
        condition: service_healthy
    profiles: [ "", "web_service", "tools" ]
    restart: on-failure

  nikto-dev:
    build:
      context: nikto/
    environment:
      WEB_ADDR: https://modsecurity-dev:8443
    networks:
      - transcendence-dev
    volumes:
      - ./nikto/output/:/git/nikto/output/:rw
    depends_on:
      modsecurity-dev:
        condition: service_started
    profiles: [ "web_service", "tools" ]

networks:
  transcendence-dev:
    driver: bridge

volumes:
  auth_service-postgres_data-dev:
  game_service-postgres_data-dev:
  friendship_service-postgres_data-dev:
  web_service-static_data-dev:
  static_data-dev:
  media_data-dev:

  ssl_cert_data-dev:
  ssl_cert_key_data-dev:

  vault_root_data-dev:
  vault_keys_data-dev:
  vault_services_data-dev:

  prometheus_data-dev:
  grafana_data-dev:
  telegraf_data-dev:

secrets:
  auth_service-postgres_host:
    file: ./secrets/auth_service/postgres-host
  auth_service-postgres_db:
    file: ./secrets/auth_service/postgres-db
  auth_service-postgres_user:
    file: ./secrets/auth_service/postgres-user
  auth_service-postgres_password:
    file: ./secrets/auth_service/postgres-password
  game_service-postgres_host:
    file: ./secrets/game_service/postgres-host
  game_service-postgres_db:
    file: ./secrets/game_service/postgres-db
  game_service-postgres_user:
    file: ./secrets/game_service/postgres-user
  game_service-postgres_password:
    file: ./secrets/game_service/postgres-password
  friendship_service-postgres_host:
    file: ./secrets/friendship_service/postgres-host
  friendship_service-postgres_db:
    file: ./secrets/friendship_service/postgres-db
  friendship_service-postgres_user:
    file: ./secrets/friendship_service/postgres-user
  friendship_service-postgres_password:
    file: ./secrets/friendship_service/postgres-password
  sso_42_client_secret:
    file: ./secrets/42-client-secret
  grafana_username:
    file: ./secrets/grafana/grafana-username
  grafana_password:
    file: ./secrets/grafana/grafana-password

